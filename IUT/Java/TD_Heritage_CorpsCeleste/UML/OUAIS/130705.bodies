class SortieGUIBarre
!!!134801.java!!!	miseAJour(inout statistiques : Stats) : void
		this.stats=statistiques;
		this.repaint();
!!!134929.java!!!	SortieGUIBarre()
		super();
		setPreferredSize(new Dimension(tailleX, TailleY));
!!!135057.java!!!	paint(inout g : Graphics) : void
		super.paint(g);
		
		

		// s'il n'y a pas de tests, on ne fait rien
		int nbTests = this.stats.nbTests;
		if (nbTests == 0)
			return;

		// met a jour l'affichage de la barre
		int tailleXBarre = this.tailleX - 2 * decalX;
		int decalage = decalX;

		// le OK
		int nbOk = this.stats.nbOk;
		int finOK = (tailleXBarre * nbOk) / nbTests;
		g.setColor(Color.green);
		g.fillRect(decalage, decalY, finOK, BarreY);
		decalage += finOK;

		// le echec
		g.setColor(Color.orange);
		int nbEchec = this.stats.nbEchec;
		int finEchec = (tailleXBarre * nbEchec) / nbTests;
		g.fillRect(decalage, decalY, finEchec, BarreY);
		decalage += finEchec;
		// le erreur
		g.setColor(Color.red);
		int nbErreur = this.stats.nbErreur;
		int finErreur = (tailleXBarre * nbErreur) / nbTests;
		g.fillRect(decalage, decalY, finErreur, BarreY);
		decalage += finErreur;
		// dessin rectangle
		g.setColor(Color.black);
		g.drawRect((tailleX - tailleXBarre) / 2, decalY, tailleXBarre, BarreY);

		g.drawString("Tests: " + nbTests, 0, TailleY - 10);
		g.drawString("Ok: " + nbOk, 100, TailleY - 10);
		g.drawString("Echec: " + nbEchec, 200, TailleY - 10);
		g.drawString("Erreur: " + nbErreur, 300, TailleY - 10);
		g.dispose();

